import{_ as o,r as p,o as c,c as i,b as s,d as n,e,a as t}from"./app-53705635.js";const r={},l=s("h2",{id:"定义",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#定义","aria-hidden":"true"},"#"),n(" 定义")],-1),d={href:"https://ethers.io/",target:"_blank",rel:"noopener noreferrer"},u=t(`<h2 id="常用术语" tabindex="-1"><a class="header-anchor" href="#常用术语" aria-hidden="true">#</a> 常用术语</h2><table><thead><tr><th>类</th><th>描述</th></tr></thead><tbody><tr><td><strong>Provider</strong></td><td>Provider（以太坊）是一个为以太坊网络连接提供抽象的类。它提供对区块链及其状态的只读访问。</td></tr><tr><td><strong>Signer</strong></td><td>签名者是一个（通常）以某种方式直接或间接访问私钥的类，它可以签署消息和交易以授权网络向您的帐户收取以太币以执行操作。</td></tr><tr><td><strong>Contract</strong></td><td>合约是一种抽象，表示与以太坊网络上特定合约的连接，因此应用程序可以像使用普通 JavaScript 对象一样使用它。</td></tr></tbody></table><h2 id="使用案例" tabindex="-1"><a class="header-anchor" href="#使用案例" aria-hidden="true">#</a> 使用案例</h2><h3 id="提供者" tabindex="-1"><a class="header-anchor" href="#提供者" aria-hidden="true">#</a> <strong>提供者</strong></h3><p>提供<strong>者</strong>是对以太坊网络连接的抽象，为标准以太坊节点功能提供简洁、一致的接口。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Web3Provider 包装了一个标准的 Web3 提供程序，这是</span>
<span class="token comment">// MetaMask 作为 window.ethereum 注入每个页面的内容</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>providers<span class="token punctuation">.</span>Web3Provider</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>ethereum<span class="token punctuation">)</span>
 <span class="token comment">// MetaMask 需要请求权限才能连接用户帐户</span>
<span class="token keyword">await</span> provider <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;eth_requestAccounts&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// MetaMask 插件还允许签署交易</span>
<span class="token comment">// 发送以太币并支付更改区块链内的状态。</span>
<span class="token comment">// 为此，您需要帐户签名者...</span>
 <span class="token keyword">const</span> signer <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">getSigner</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查询区块链</strong></p>`,7),k={href:"https://docs.ethers.io/v5/api/providers/provider/",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 查找当前区块号</span>
<span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getBlockNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token comment">// 14983200</span>
 
<span class="token comment">// 获取账户余额（通过地址或 ENS 名称，如果网络支持）</span>
 balance <span class="token operator">=</span> <span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token string">&quot;ethers.eth&quot;</span><span class="token punctuation">)</span>
 <span class="token comment">// { BigNumber: &quot;182826475815887608&quot; }</span>
 
<span class="token comment">// 通常你需要将输出格式化为对用户更友好的格式，</span>
 <span class="token comment">// 例如在 ether（而不是 wei）</span>
中 ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">formatEther</span><span class="token punctuation">(</span>balance<span class="token punctuation">)</span>
 <span class="token comment">// &#39;0.182826475815887608&#39;</span>
 
<span class="token operator">/</span> <span class="token operator">/</span> 如果用户在输入字段中输入字符串，您可能需要
<span class="token comment">// 将其从 ether（作为字符串）转换为 wei（作为 BigNumber）</span>
 ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>
 <span class="token comment">// { BigNumber: &quot; 1000000000000000000&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="签名者" tabindex="-1"><a class="header-anchor" href="#签名者" aria-hidden="true">#</a> 签名者</h3><p>以太坊中的<strong>签名者</strong>是<em>以太</em>坊账户的抽象，可用于对消息和交易进行签名，并将签名的交易发送到以太坊网络以执行状态更改操作。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 向一个 ens 名称发送 1 个以太币。</span>
<span class="token keyword">const</span> tx <span class="token operator">=</span> signer<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token string">&quot;ricmoo.firefly.eth&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="合同" tabindex="-1"><a class="header-anchor" href="#合同" aria-hidden="true">#</a> 合同</h3><p><strong>合约</strong>对象是部署在以太坊网络上的合约（EVM 字节码）的抽象。它允许以一种简单的方式将调用和交易序列化到链上合约，并反序列化它们的结果和发出的日志。</p>`,6),m={href:"https://docs.ethers.io/v5/api/contract/contract/",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>如果您熟悉数据库，这类似于<em>对象关系映射器</em>(ORM)。</p><p>为了与链上的合约进行通信，这个类需要知道有哪些方法可用以及如何对数据进行编码和解码，这就是<em>应用程序二进制接口</em>（ABI）提供的。</p><p>这个类是一个<em>元类</em>，这意味着它的方法是在运行时构造的，当你将 ABI 传递给构造函数时，它使用它来确定要添加哪些方法。</p><p>虽然链上合约可能有许多可用的方法，但您可以放心地忽略任何您不需要或不使用的方法，为合约提供 ABI 的较小子集。</p><p>ABI 通常来自 Solidity 或 Vyper 编译器，但您可以在代码中使用 Human-Readable ABI，以下示例将使用该 ABI。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 您也可以使用 ENS 名称作为合约地址</span>
<span class="token keyword">const</span> daiAddress <span class="token operator">=</span> <span class="token string">&quot;dai.tokens.ethers.eth&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// ERC-20 Contract ABI，这是一个通用的合约接口</span>
<span class="token comment">// 用于代币（这是人类可读的 ABI 格式）</span>
 <span class="token keyword">const</span> daiAbi <span class="token operator">=</span> <span class="token punctuation">[</span>
   <span class="token comment">// 关于代币的一些细节</span>
  <span class="token string">&quot;function name() view returns (string) &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;function symbol() view returns (string)&quot;</span><span class="token punctuation">,</span>

   <span class="token comment">// 获取账户余额</span>
  <span class="token string">&quot;function balanceOf(address) view returns (uint)&quot;</span><span class="token punctuation">,</span>

   <span class="token comment">// 将你的一些代币发送给其他人</span>
  <span class="token string">&quot;function transfer(address to, uint amount)&quot;</span><span class="token punctuation">,</span>

   <span class="token comment">// 每当有人向其他人转账时触发的事件</span>
  &quot;event <span class="token function">Transfer</span><span class="token punctuation">(</span>address indexed from<span class="token punctuation">,</span>

<span class="token comment">// 合约对象</span>
<span class="token keyword">const</span> daiContract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Contract</span><span class="token punctuation">(</span>daiAddress<span class="token punctuation">,</span> daiAbi<span class="token punctuation">,</span> provider<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function b(g,f){const a=p("ExternalLinkIcon");return c(),i("div",null,[l,s("p",null,[n("ethers.js 库旨在成为一个完整而紧凑的库，用于与以太坊区块链及其生态系统进行交互。它最初是为与"),s("a",d,[n("ethers.io"),e(a)]),n("一起使用而设计的，后来扩展为一个更通用的库。")]),u,s("p",null,[n("​ 一旦你有了一个"),s("a",k,[n("Provider"),e(a)]),n("，你就有了一个到区块链的只读连接，你可以用它来查询当前状态、获取历史日志、查找部署的代码等等。")]),v,s("p",null,[s("a",m,[n("Contract"),e(a)]),n("对象使您可以更轻松地将链上 Contract 用作普通 JavaScript 对象，并将方法映射到为您编码和解码数据。")]),h])}const q=o(r,[["render",b],["__file","ethers.html.vue"]]);export{q as default};
