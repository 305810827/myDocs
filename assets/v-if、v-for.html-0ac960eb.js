import{_ as e,o,c as p,a as t}from"./app-53705635.js";const s="/assets/image-20220516151738376-3d8efe01.png",c="/assets/image-20220516151847559-16843997408211-ee34ecb8.png",r={},i=t('<h1 id="v-if和v-for哪个优先级更高" tabindex="-1"><a class="header-anchor" href="#v-if和v-for哪个优先级更高" aria-hidden="true">#</a> <strong>v-if和v-for哪个优先级更高？</strong></h1><p>结论：</p><p>vue2输出的渲染函数是先执行循环，在看条件判断，如果将v-if和v-for写在一个标签内，哪怕只渲染列表中的一小部分，也要重新遍历整个列表，无形造成资源浪费。vue3中则相反，v-if优先级高于v-for，所以两者写在一个标签内，如果v-if使用了v-for循环出来的变量，则会有变量不存在的异常。</p><p>场景：</p><p>1、过滤列表中的项目。</p><p>2、避免渲染本应该被隐藏的列表。</p><p>解决：</p><p>1、通过compute返回过滤后的列表</p><p>2、外面包一层<code>template</code>分开v-for和v-if</p><p>源码：</p><p>vue2</p><p><img src="'+s+'" alt="image-20220516151738376"></p><p>v2：https://github1s.com/vuejs/vue/blob/HEAD/src/compiler/codegen/index.js#L65-L66</p><p>vue3</p><p><img src="'+c+'" alt="image-20220516151847559"></p><p>v3：https://github1s.com/vuejs/core/blob/HEAD/packages/compiler-core/src/codegen.ts#L586-L587</p>',16),a=[i];function v(f,n){return o(),p("div",null,a)}const m=e(r,[["render",v],["__file","v-if、v-for.html.vue"]]);export{m as default};
