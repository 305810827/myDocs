import{_ as e,r as l,o,c,b as n,d as t,e as a,a as r}from"./app-53705635.js";const p={},i=r(`<p>1、 HTML 文档的标准结构：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Metadata and such --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Where the content begins --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、html为文档的根元素，是所有其他元素的最顶层。head构成body唯一直接落在里面的两个元素html</p><p>CSS 中有一个:root选择器, 与html标签选择器目标相同。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token selector">html</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>:root</code>具有更高的特异性：(0, 0, 1, 0) vs (0, 0, 0, 1)。</p><p>3、通常认为<code>&lt;html&gt;</code>是文档的根元素。<code>&lt;html&gt;</code>在层次结构中取代<code>&lt;body&gt;</code>，因此它必须包含所有全局样式。</p>`,7),d={href:"http://www.w3.org/TR/html-markup/body.html",target:"_blank",rel:"noopener noreferrer"},u=n("code",null,"<body>",-1),m=n("ul",null,[n("li",null,"background"),n("li",null,"bgcolor"),n("li",null,"marginbottom"),n("li",null,"marginleft"),n("li",null,"marginright"),n("li",null,"margintop"),n("li",null,"text")],-1),g=n("p",null,"虽然这些属性现在被认为已过时，但建议使用 CSS 代替它们对应的 CSS",-1),_=n("thead",null,[n("tr",null,[n("th",null,[n("strong",null,"Inline Attribute")]),n("th",null,[n("strong",null,"CSS Property")])])],-1),h=n("td",null,"background",-1),k={href:"https://css-tricks.com/almanac/properties/b/background/",target:"_blank",rel:"noopener noreferrer"},b=n("td",null,"bgcolor",-1),v={href:"https://css-tricks.com/almanac/properties/b/background/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://css-tricks.com/almanac/properties/b/background-color/",target:"_blank",rel:"noopener noreferrer"},y=n("td",null,"marginbottom",-1),S={href:"https://css-tricks.com/almanac/properties/m/margin/",target:"_blank",rel:"noopener noreferrer"},x=n("td",null,"marginleft",-1),C={href:"https://css-tricks.com/almanac/properties/m/margin/",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,"marginright",-1),E={href:"https://css-tricks.com/almanac/properties/m/margin/",target:"_blank",rel:"noopener noreferrer"},N=n("td",null,"margintop",-1),T={href:"https://css-tricks.com/almanac/properties/m/margin/",target:"_blank",rel:"noopener noreferrer"},V=n("td",null,"text",-1),q={href:"https://css-tricks.com/almanac/properties/f/font/",target:"_blank",rel:"noopener noreferrer"},B=n("p",null,[t("鉴于这些 CSS 属性源自为 编写的内联属性，"),n("code",null,"<body>"),t("它们也应该直接应用于"),n("code",null,"<body>"),t("CSS 中，而不是将它们推入"),n("code",null,"<html>"),t("元素中，这似乎是合适的。")],-1);function I(L,M){const s=l("ExternalLinkIcon");return o(),c("div",null,[i,n("p",null,[t("但事实并非如此。事实上，以下的内联属性"),n("a",d,[t("最初是在规范中指定"),a(s)]),t("的"),u,t("：")]),m,g,n("table",null,[_,n("tbody",null,[n("tr",null,[h,n("td",null,[n("a",k,[t("background"),a(s)])])]),n("tr",null,[b,n("td",null,[n("a",v,[t("background"),a(s)]),t(),n("a",f,[t("background-color"),a(s)])])]),n("tr",null,[y,n("td",null,[n("a",S,[t("margin-bottom"),a(s)])])]),n("tr",null,[x,n("td",null,[n("a",C,[t("margin-left"),a(s)])])]),n("tr",null,[w,n("td",null,[n("a",E,[t("margin-right"),a(s)])])]),n("tr",null,[N,n("td",null,[n("a",T,[t("margin-top"),a(s)])])]),n("tr",null,[V,n("td",null,[n("a",q,[t("font"),a(s)])])])])]),B])}const A=e(p,[["render",I],["__file","内联css写在html和body的区别.html.vue"]]);export{A as default};
