import{_ as t,o as e,c as l,a}from"./app-53705635.js";const d={},i=a(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>区块链(1.0)是一个基于密码学安全的分布式账本，是一个方便验证，不可篡改的账本。</p><p>区块链(2.0)被认为是与智能合约相结合的区块链，可扩展，如以太坊。</p><h2 id="哈希函数" tabindex="-1"><a class="header-anchor" href="#哈希函数" aria-hidden="true">#</a> 哈希函数</h2><p>**哈希函数：**Hash(原始信息) = 摘要信息 原始信息可以是任意的信息, hash之后会得到一个简短的摘要信息</p><p><strong>特点:</strong></p><ul><li>同样的原始信息用同一个哈希函数总能得到相同的摘要信息</li><li>原始信息任何微小的变化都会哈希出面目全非的摘要信息</li><li>从摘要信息无法逆向推算出原始信息</li></ul><p><strong>举例说明：</strong> Hash(张三借给李四100万，利息1%，1年后还本息 .....) = AC4635D34DEF 账本上记录了AC4635D34DEF这样一条记录。</p><p>可以看出哈希函数有4个作用：</p><ul><li>简化信息 很好理解，哈希后的信息变短了。</li><li>标识信息 可以使用AC4635D34DEF来标识原始信息，摘要信息也称为原始信息的id。</li><li>隐匿信息 账本是AC4635D34DEF这样一条记录，原始信息被隐匿。</li><li>验证信息 假如李四在还款时欺骗说，张三只借给李四10万，双方可以用AC4635D34DEF来验证原始信息</li></ul><p>哈希函数的这4个作用在区块链技术里有广泛的运用。（哈希函数是一组函数或算法）</p><h2 id="记账方法" tabindex="-1"><a class="header-anchor" href="#记账方法" aria-hidden="true">#</a> 记账方法</h2><p>假设有一个账页序号为0的账页交易记录如下:</p><table><thead><tr><th style="text-align:left;">账号</th><th style="text-align:left;">入账</th><th style="text-align:left;">出账</th><th style="text-align:left;">余额</th><th style="text-align:left;">备注说明</th></tr></thead><tbody><tr><td style="text-align:left;">王二</td><td style="text-align:left;">100</td><td style="text-align:left;"></td><td style="text-align:left;">190</td><td style="text-align:left;">收到xxx货款</td></tr><tr><td style="text-align:left;">张三</td><td style="text-align:left;"></td><td style="text-align:left;">100</td><td style="text-align:left;">30</td><td style="text-align:left;">xxxx</td></tr><tr><td style="text-align:left;">李四</td><td style="text-align:left;">120</td><td style="text-align:left;">90</td><td style="text-align:left;">170</td><td style="text-align:left;">xxxx</td></tr></tbody></table><p>记账时间为：2017-10-22 10:22:02</p><p>​ 区块链在记账是会把账页信息（包含序号、记账时间、交易记录）作为原始信息进行Hash, 得到一个Hash值，如：787635ACD, 用函数表示为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Hash(序号0、记账时间、交易记录) = 787635ACD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>账页信息和Hash值组合在一起就构成了第一个区块。</p><blockquote><p>比特币系统里约10分钟记一次账，即每个区块生成时间大概间隔10分钟</p></blockquote><p>在记第2个账页的时候，会把上一个块的Hash值和当前的账页信息一起作为原始信息进行Hash,即：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Hash(上一个Hash值、序号1、记账时间、交易记录) = 456635BCD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 这样第2个区块不仅包含了本账页信息，还间接的包含了第一个区块的信息。依次按照此方法继续记账，则最新的区块总是间接包含了所有之前的账页信息。</p><p>​ 所有这些区块组合起来就形成了区块链，这样的区块链就构成了一个便于验证（只要验证最后一个区块的Hash值就相当于验证了整个账本），不可更改（任何一个交易信息的更改，会让所有之后的区块的Hash值发生变化，这样在验证时就无法通过）的总账本。</p>`,23),s=[i];function n(r,h){return e(),l("div",null,s)}const p=t(d,[["render",n],["__file","区块链.html.vue"]]);export{p as default};
