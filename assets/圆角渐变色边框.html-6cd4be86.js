import{_ as e,o as r,c as d,a}from"./app-53705635.js";const o={},i=a('<p>通过CSS实现渐变色边框的几种方法：</p><h3 id="_1-使用border-image实现渐变色边框-边框圆角" tabindex="-1"><a class="header-anchor" href="#_1-使用border-image实现渐变色边框-边框圆角" aria-hidden="true">#</a> <strong>1. 使用border-image实现渐变色边框，边框圆角</strong></h3><p>.box{</p><p>border-radius: 16px;</p><p>border: 10px solid;</p><p>border-image: linear-gradient(#8f41e9, #578aef,#ff5277)30 30;</p><p>}</p><p>这种方式虽然简单但有个明显的缺陷，不支持设置<code>border-radius</code> ，外框想设置成圆角需要加</p><p>clip-path: inset(0 round 10px);</p><p>优点是内容背景可以透明</p><h3 id="_2-使用-background-image实现渐变色边框-边框圆角" tabindex="-1"><a class="header-anchor" href="#_2-使用-background-image实现渐变色边框-边框圆角" aria-hidden="true">#</a> <strong>2. 使用 background-image实现渐变色边框，边框圆角</strong></h3><p>.box{</p><p>border: 4px solid transparent;</p><p>border-radius: 16px;</p><p>background-clip: padding-box, border-box;</p><p>background-origin: padding-box, border-box;</p><p>background-image: linear-gradient(to right, #222, #222), linear-gradient(90deg, #8F41E9, #578AEF);</p><p>}</p><p><strong>缺点：</strong></p><ul><li>内容背景不能半透明</li><li>实现复杂</li><li>不能使用padding</li><li>不是内圆角</li></ul><h3 id="_3、border-image-overflow-hidden实现" tabindex="-1"><a class="header-anchor" href="#_3、border-image-overflow-hidden实现" aria-hidden="true">#</a> 3、<code>border-image</code>+<code>overflow: hidden</code>实现</h3><p>.radius-gradient-border3{ max-width: 300px; border-radius: 5px; margin-bottom: 20px; overflow: hidden; } .radius-gradient-border3 .inner{ padding: 8px; border: 5px solid transparent; border-image: linear-gradient(90deg, #387EE8, #f60) 1; color: #f60; background-color: rgba(255,255,255,0.7); } **缺点：**需要多嵌套一层父元素，并且还需要设置<code>overflow: hidden;</code></p><h3 id="_4、动态边框" tabindex="-1"><a class="header-anchor" href="#_4、动态边框" aria-hidden="true">#</a> <strong>4、动态边框</strong></h3><p>.box{</p><p>border-radius: 16px;</p><p>border: 10px solid;</p><p>border-image: linear-gradient(#8f41e9, #578aef,#ff5277)30 30;</p><p>animation: light 3s linear infinite;</p><p>}</p><p>@keyframes light {</p><p>0% {filter: hue-rotate(0deg);/<em>色调旋转</em>/}</p><p>20% {filter: hue-rotate(100deg);/<em>色调旋转</em>/}</p><p>40% {filter: hue-rotate(200deg);/<em>色调旋转</em>/}</p><p>100% {filter: hue-rotate(360deg);/<em>色调旋转</em>/}</p><p>}</p>',35),p=[i];function n(t,g){return r(),d("div",null,p)}const s=e(o,[["render",n],["__file","圆角渐变色边框.html.vue"]]);export{s as default};
