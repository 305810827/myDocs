(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{443:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2021-css实用新功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-css实用新功能"}},[t._v("#")]),t._v(" 2021  CSS实用新功能")]),t._v(" "),a("h2",{attrs:{id:"自定义属性与变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义属性与变量"}},[t._v("#")]),t._v(" 自定义属性与变量")]),t._v(" "),a("p",[t._v("译者注：这里的自定义属性（Custom Properties）和我们所说的变量是一个东西，见 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN Web Doc"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("自定义属性基本上允许我们定义 CSS 属性的替代品以用于我们的设计。一个例子就能让你理解为什么说这个功能有用：")]),t._v(" "),a("p",[t._v("通常，在构建主题时，我们会选择一种"),a("a",{attrs:{href:"https://websitesetup.org/website-color-schemes/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("配色方案")]),a("OutboundLink")],1),t._v("，然后在必要时声明这些颜色。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #cd2653"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".social-icons a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #cd2653"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".wp-block-button.is-style-outline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #cd2653"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("这种方法的问题是，如果我们想要更改一种颜色，则必须在每一处使用了这个颜色的地方做出对应的修改。尽管"),a("a",{attrs:{href:"https://torquemag.io/2015/12/17-best-code-editors-wordpress-developers-users/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("代码编辑器")]),a("OutboundLink")],1),t._v("可以通过搜索和替换轻松地做到这一点，但这仍然很烦人。尤其是如果我们只是想进行快速测试，并且必须再次撤消所有操作。")]),t._v(" "),a("h3",{attrs:{id:"更好的解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更好的解决方案"}},[t._v("#")]),t._v(" 更好的解决方案")]),t._v(" "),a("p",[t._v("自定义属性就解决了这个问题。在它们的帮助下，我们可以轻松地将刚才所说的配色分配给一个变量，然后每次使用该颜色时，只需将其作为 CSS 属性输入即可，如下所示：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(":root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--global--color-primary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #28303d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--global--color-primary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".social-icons a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--global--color-primary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("这样，每当我们想要对配色进行更改时，只需要在一个地方进行更改即可。太酷了吧？过去，我们还需要使用 "),a("a",{attrs:{href:"https://torquemag.io/2017/06/start-using-sass-wordpress-npm-scripts/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sass"),a("OutboundLink")],1),t._v(" 之类的预处理器来使用变量，而现在它是 CSS 的原生功能。")]),t._v(" "),a("p",[t._v("正如您在上面看到的，自定义属性也非常易于使用。在 "),a("code",[t._v(":root")]),t._v(" 选择器下的文档开始处定义变量（请注意，变量前面应使用双连字符 "),a("code",[t._v("--")]),t._v("，这是将变量称为自定义属性的原因，它们也区分大小写！）。之后我们就可以通过 "),a("code",[t._v("var()")]),t._v(" 函数在整个文档中使用它们。")]),t._v(" "),a("p",[t._v("如果要更改变量，只需更改 "),a("code",[t._v(":root")]),t._v(" 下面的声明就可以了。")]),t._v(" "),a("h2",{attrs:{id:"supports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supports"}},[t._v("#")]),t._v(" @supports")]),t._v(" "),a("p",[t._v("接下来，有一个类似于媒体查询的 CSS 规则。不过我们不是用它基于屏幕大小或设备类型编写特定的样式，而是根据用户浏览器支持的 CSS 属性和值，应用特定的样式。")]),t._v(" "),a("p",[t._v("这有什么用？")]),t._v(" "),a("p",[t._v("正如你将在本文中看到的那样，并非所有的浏览器和设备都支持所有 CSS 功能。尽管我们通常可以使用优雅降级来处理此问题，但在某些情况下，如果我们不专门包括对最新的技术的支持，则使用这些技术可能会严重破坏我们的网站的样式结构。")]),t._v(" "),a("p",[t._v("此外，我们还可以使用 "),a("code",[t._v("@supports")]),t._v(" 为支持特定功能的更现代的浏览器添加额外的功能或样式（这就是为什么使用的查询 "),a("code",[t._v("@supports")]),t._v(" 也称为“功能查询”的原因）。")]),t._v(" "),a("h3",{attrs:{id:"如何使用功能查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用功能查询"}},[t._v("#")]),t._v(" 如何使用功能查询")]),t._v(" "),a("p",[t._v("如果您熟悉媒体查询，则使用支持检查将非常容易。使用方法如下：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@supports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".site-content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("如你所见，其实不过就是规则的声明后跟要在方括号中检查的属性或属性 — 值对，再加上我们平时用的 CSS 声明用于说明满足条件时要应用哪些样式规则。")]),t._v(" "),a("p",[t._v("上面的示例指出，如果浏览器支持 CSS 网格功能（稍后将对此进行详细介绍），则应用 "),a("code",[t._v("display: grid;")]),t._v(" 样式到 "),a("code",[t._v(".site-content")]),t._v(" 的元素。")]),t._v(" "),a("p",[t._v("同样重要的是要注意 "),a("code",[t._v("@supports")]),t._v(" 支持使用运算符 "),a("code",[t._v("not")]),t._v("、"),a("code",[t._v("and")]),t._v(" 和 "),a("code",[t._v("or")]),t._v("（也可以结合使用）以创建更具体的规则，例如对不支持该特定功能的浏览器的优雅降级：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@supports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".site-content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("为了能够正常使用 "),a("code",[t._v("@supports")]),t._v(" 功能，你需要知道哪些浏览器支持它（我知道，这是一种元数据）。好消息是**"),a("a",{attrs:{href:"https://caniuse.com/css-featurequeries",target:"_blank",rel:"noopener noreferrer"}},[t._v("所有的现代浏览器都支持"),a("OutboundLink")],1),t._v("**。")]),t._v(" "),a("h2",{attrs:{id:"内容可见性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容可见性"}},[t._v("#")]),t._v(" 内容可见性")]),t._v(" "),a("p",[a("code",[t._v("content-visibility")]),t._v(" 是 CSS 中一个非常酷的新功能，能够有效"),a("a",{attrs:{href:"https://torquemag.io/2015/08/ways-to-speed-up-wordpress-decrease-page-load-time/",target:"_blank",rel:"noopener noreferrer"}},[t._v("提高网站性能"),a("OutboundLink")],1),t._v("。它基本上像"),a("a",{attrs:{href:"https://torquemag.io/2018/01/lazy-load-wordpress/",target:"_blank",rel:"noopener noreferrer"}},[t._v("延迟加载"),a("OutboundLink")],1),t._v("一样工作，而且不仅适用于图像，还适用于任何 HTML 元素。我们可以使用它来实现网站的懒加载。")]),t._v(" "),a("p",[t._v("使用也超级容易。只需将其应用于我们选择的元素，如下所示：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".content-below-fold")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content-visibility")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[a("code",[t._v("content-visibility")]),t._v(" 支持三个值。默认情况下为 "),a("code",[t._v("visible")]),t._v("，此时元素将照常加载。我们可以将其设置为 "),a("code",[t._v("hidden")]),t._v("，即无论元素是否可见都不会呈现该元素。设置为 "),a("code",[t._v("auto")]),t._v(" 时，则会跳过可见区域之外的元素，然后在它们出现在屏幕上时才开始进行渲染。")]),t._v(" "),a("p",[t._v("这可是很酷的东西，对不对？")]),t._v(" "),a("p",[t._v("在这种情况下可能也很重要的一件事是考虑一下 "),a("code",[t._v("contain-intrinsic-size")]),t._v("。由于设置为 "),a("code",[t._v("content-visibility: hidden;")]),t._v(" 的元素的大小实际上为零，因此我们可以将理论高度和宽度应用于隐藏的元素，以便浏览器可以从一开始就将其考虑在内，而不是在渲染元素时考虑。这样，我们可以避免在滚动过程中布局被突然改变。")]),t._v(" "),a("p",[t._v("浏览器支持方面，"),a("a",{attrs:{href:"https://caniuse.com/css-content-visibility",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("content-visibility")]),a("OutboundLink")],1),t._v(" 仍然有些差劲，不过正在朝着那个方向前进着，"),a("a",{attrs:{href:"https://caniuse.com/mdn-css_properties_contain-intrinsic-size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("contain-intrinsic-size")]),a("OutboundLink")],1),t._v(" 同理。")]),t._v(" "),a("h2",{attrs:{id:"滚动捕捉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#滚动捕捉"}},[t._v("#")]),t._v(" 滚动捕捉")]),t._v(" "),a("p",[t._v("滚动捕捉让我们可以选择将用户的视口锁定到站点的某些部分或元素。对于创建很酷的过渡效果并在向下滚动页面帮助用户专注于最重要的页面元素的场景而言，这个功能非常有用。我们可以"),a("a",{attrs:{href:"https://codepen.io/tutsplus/pen/qpJYaK",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这里"),a("OutboundLink")],1),t._v("找到一个简单的演示。")]),t._v(" "),a("p",[t._v("这种效果在移动设备的应用程序中很明显，但是，通过滚动捕捉，我们也可以将其带到网站上。")]),t._v(" "),a("p",[t._v("在最基本的情况上用法也相对简单。我们只需将滚动捕捉的类型应用于容器并定义其子对象应捕捉到的位置。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("scroll-snap-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" y mandatory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("scroll-snap-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("当然还有更多有关它的使用特色。如果你想了解它，CSS Tricks 已经有了一篇"),a("a",{attrs:{href:"https://css-tricks.com/practical-css-scroll-snapping/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("很完美的文章")]),a("OutboundLink")],1),t._v("了。")]),t._v(" "),a("h2",{attrs:{id:"is-和-where"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-和-where"}},[t._v("#")]),t._v(" :is 和 :where")]),t._v(" "),a("p",[t._v("你可能不知道的新 CSS 功能列表中的最后一个条目是 "),a("code",[t._v(":is")]),t._v(" 和 "),a("code",[t._v(":where")]),t._v(" 伪类，它们允许我们通过缩短 CSS 选择器列表来减少 CSS 样式中的重复代码。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".main a:hover,\n.sidebar a:hover,\n.site-footer a:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 样式 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("还有这个：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(":is(.main, .sidebar, .site-footer) a:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 样式 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("同理 "),a("code",[t._v(":where")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(":where(.main, .sidebar, .site-footer) a:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 样式 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("如果包含的样式标记相同，那又会有什么区别？区别在于 "),a("code",[t._v(":is")]),t._v(" 更加具体。它采用括号中最具体元素的针对性级别。与此相反，"),a("code",[t._v(":where")]),t._v(" 的针对性始终为零。因此更容易按照案例进行覆盖。")])])}),[],!1,null,null,null);s.default=e.exports}}]);