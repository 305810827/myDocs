(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{461:function(v,_,t){"use strict";t.r(_);var d=t(62),e=Object(d.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"字符集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[v._v("#")]),v._v(" 字符集")]),v._v(" "),t("p",[v._v("计算机系统里的字符集，就是已编号的字符的有序集合。比如ASCII字符集，按照编号顺序排列。")]),v._v(" "),t("h3",{attrs:{id:"字符集编码过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符集编码过程"}},[v._v("#")]),v._v(" 字符集编码过程")]),v._v(" "),t("p",[v._v("一个"),t("code",[v._v("字符集")]),v._v("从诞生到真正让计算机使用大致要经历下边5个步骤：")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("明确包含字符的范围。")])]),v._v(" "),t("p",[v._v("这个步骤就是确定"),t("code",[v._v("字符集")]),v._v("里应该包含哪些字符。比如"),t("code",[v._v("ASCII字符集")]),v._v("收录128个字符，而"),t("code",[v._v("GB2312字符集")]),v._v("收录7445个字符。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("给步骤"),t("code",[v._v("1")]),v._v("中确定的字符进行编号。")])]),v._v(" "),t("p",[v._v("对于字符集中已经确定的字符，想个办法让某个字符和某个数字建立一一对应关系。")]),v._v(" "),t("p",[v._v("比如"),t("code",[v._v("ASCII字符集")]),v._v("，字符只有128个，所以直接给每一个字符指定一个"),t("code",[v._v("0~127")]),v._v("的数字。但是比较复杂的字符集就不是那么简单了，比如"),t("code",[v._v("GB2312字符集")]),v._v("用了"),t("code",[v._v("区位码")]),v._v("的方式来给字符编号。")]),v._v(" "),t("p",[v._v("特别注意：编号与下边步骤中的"),t("code",[v._v("编码")]),v._v("是两个完全不同的概念。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("将步骤"),t("code",[v._v("2")]),v._v("中的"),t("code",[v._v("编号")]),v._v("确定"),t("code",[v._v("逻辑上的字符编码")]),v._v("。")])]),v._v(" "),t("p",[v._v("计算机只能认识二进制，要把字符存到计算机里需要把字符"),t("code",[v._v("编号")]),v._v("映射为二进制数据。这种映射有的是直接把编号映射为二进制数据，有的因为一些原因不能直接映射，采用一些算法来计算出该编号对应的二进制数据。")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("Bin(二进制)")]),v._v(" "),t("th",[v._v("Oct(八进制)")]),v._v(" "),t("th",[v._v("Dec(十进制)")]),v._v(" "),t("th",[v._v("Hex(十六进制)")]),v._v(" "),t("th",[v._v("缩写/字符")]),v._v(" "),t("th",[v._v("解释")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("0011 0000")]),v._v(" "),t("td",[v._v("060")]),v._v(" "),t("td",[v._v("48")]),v._v(" "),t("td",[v._v("0x30")]),v._v(" "),t("td",[v._v("0")]),v._v(" "),t("td",[v._v("字符0")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0001")]),v._v(" "),t("td",[v._v("061")]),v._v(" "),t("td",[v._v("49")]),v._v(" "),t("td",[v._v("0x31")]),v._v(" "),t("td",[v._v("1")]),v._v(" "),t("td",[v._v("字符1")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0010")]),v._v(" "),t("td",[v._v("062")]),v._v(" "),t("td",[v._v("50")]),v._v(" "),t("td",[v._v("0x32")]),v._v(" "),t("td",[v._v("2")]),v._v(" "),t("td",[v._v("字符2")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0011")]),v._v(" "),t("td",[v._v("063")]),v._v(" "),t("td",[v._v("51")]),v._v(" "),t("td",[v._v("0x33")]),v._v(" "),t("td",[v._v("3")]),v._v(" "),t("td",[v._v("字符3")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0100")]),v._v(" "),t("td",[v._v("064")]),v._v(" "),t("td",[v._v("52")]),v._v(" "),t("td",[v._v("0x34")]),v._v(" "),t("td",[v._v("4")]),v._v(" "),t("td",[v._v("字符4")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0101")]),v._v(" "),t("td",[v._v("065")]),v._v(" "),t("td",[v._v("53")]),v._v(" "),t("td",[v._v("0x35")]),v._v(" "),t("td",[v._v("5")]),v._v(" "),t("td",[v._v("字符5")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0110")]),v._v(" "),t("td",[v._v("066")]),v._v(" "),t("td",[v._v("54")]),v._v(" "),t("td",[v._v("0x36")]),v._v(" "),t("td",[v._v("6")]),v._v(" "),t("td",[v._v("字符6")])]),v._v(" "),t("tr",[t("td",[v._v("0011 0111")]),v._v(" "),t("td",[v._v("067")]),v._v(" "),t("td",[v._v("55")]),v._v(" "),t("td",[v._v("0x37")]),v._v(" "),t("td",[v._v("7")]),v._v(" "),t("td",[v._v("字符7")])]),v._v(" "),t("tr",[t("td",[v._v("0011 1000")]),v._v(" "),t("td",[v._v("070")]),v._v(" "),t("td",[v._v("56")]),v._v(" "),t("td",[v._v("0x38")]),v._v(" "),t("td",[v._v("8")]),v._v(" "),t("td",[v._v("字符8")])]),v._v(" "),t("tr",[t("td",[v._v("0011 1001")]),v._v(" "),t("td",[v._v("071")]),v._v(" "),t("td",[v._v("57")]),v._v(" "),t("td",[v._v("0x39")]),v._v(" "),t("td",[v._v("9")]),v._v(" "),t("td",[v._v("字符9")])])])]),v._v(" "),t("p",[v._v("但是用二进制表示"),t("code",[v._v("字符")]),v._v("需要注意一下这些事：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("对于一段文本的二进制文件，计算机一次应该读多少位呢？")]),v._v(" "),t("p",[v._v("计算机里是以"),t("code",[v._v("字节")]),v._v("(8位)为基本处理单位的，不同的字符集编码有不同的规定，有的一次读一个字节，有的一次读2个，有的一次读4个。所以一次读的位数应该是8的倍数。")]),v._v(" "),t("p",[v._v("计算机一次读的规定的字节称为"),t("code",[v._v("编码单位")]),v._v("(英文名叫"),t("code",[v._v("Code Unit")]),v._v(")，也叫"),t("code",[v._v("码元")]),v._v("。")])])]),v._v(" "),t("p",[t("code",[v._v("逻辑字符编码")]),v._v("的意思就是把步骤"),t("code",[v._v("2")]),v._v("中的字符编号映射为一个二进制数字，并且规定好"),t("code",[v._v("码元")]),v._v("大小。一个"),t("code",[v._v("字符")]),v._v("也可以由几个"),t("code",[v._v("码元")]),v._v("排列起来，这个排起来的序列可以称之为"),t("code",[v._v("码元序列")]),v._v("，例如utf-8有可能一个字符由几个"),t("code",[v._v("码元")]),v._v("排列起来的。")]),v._v(" "),t("p",[v._v("对于同一种字符集，因为从"),t("code",[v._v("编号")]),v._v("映射到二进制数据的方式不同或者采用的"),t("code",[v._v("码元")]),v._v("大小不一样，同一种字符集也可能有多种编码方式。(unicode字符集)")])]),v._v(" "),t("li",[t("p",[v._v("给步骤"),t("code",[v._v("3")]),v._v("中确定的逻辑上的字符编码生成物理上的字符编码。")]),v._v(" "),t("p",[v._v("对于步骤"),t("code",[v._v("3")]),v._v("确定的二进制数字，是跟特定的计算机系统平台无关的"),t("code",[v._v("逻辑意义上的编码")]),v._v("，那么所谓的"),t("code",[v._v("物理上的字符编码")]),v._v("就是跟特定的计算机系统平台有关的更具体的编码。")]),v._v(" "),t("p",[v._v("这个主要是针对"),t("code",[v._v("码元")]),v._v("是多个字节的情况，"),t("code",[v._v("码元")]),v._v("为单个字节的可以认为步骤3和步骤4是一样的。字节的排列顺序会受到不同系统的影响。")]),v._v(" "),t("p",[v._v("经过物理编码后的二进制序列，我们称之为"),t("code",[v._v("字节序列")]),v._v("。当然，很多时候"),t("code",[v._v("码元序列")]),v._v("和"),t("code",[v._v("字节序列")]),v._v("的值是一样的。")])]),v._v(" "),t("li",[t("p",[v._v("面向计算机更底层，进行进一步的适应性编码处理。")])])]),v._v(" "),t("h3",{attrs:{id:"解码就是编码的逆过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解码就是编码的逆过程"}},[v._v("#")]),v._v(" 解码就是编码的逆过程")]),v._v(" "),t("p",[v._v("ASCII编码规定1个字节作为1个"),t("code",[v._v("码元")])]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("01001100 01001101 01001110\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("1001100 对应编号 76 (L)\n1001101 对应编号 77 (M)\n1001110 对应编号 78 (N)\n")])])]),t("h3",{attrs:{id:"字符集和字符编码模型介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符集和字符编码模型介绍"}},[v._v("#")]),v._v(" 字符集和字符编码模型介绍")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("字符集")]),v._v(" "),t("th",[v._v("说明")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("ASCII")]),v._v(" "),t("td",[v._v("美国信息交换标准代码, 包含字母、数字和一些特殊符号")])]),v._v(" "),t("tr",[t("td",[v._v("GB2312")]),v._v(" "),t("td",[v._v("收录了汉字以及拉丁字母、希腊字母、日文平假名及片假名字母、俄语西里尔字母。其中收录汉字6763个，其他文字符号682个。")])]),v._v(" "),t("tr",[t("td",[v._v("BIG5")]),v._v(" "),t("td",[v._v("又称大五码或五大码，宏碁(Acer)、神通(MiTAC)、佳佳、零壹 (Zero One)、大众 (FIC)创立，故称大五码。是台湾发明的，繁体字符集。")])]),v._v(" "),t("tr",[t("td",[v._v("GBK")]),v._v(" "),t("td",[t("code",[v._v("GBK")]),v._v("字符集就是在"),t("code",[v._v("GB2312")]),v._v("的基础上，对它收录的字符做了一个扩充，共收录 "),t("code",[v._v("21886")]),v._v(" 个汉字和图形符号，BIG5的字符集，非国家标准，K代表扩展。")])]),v._v(" "),t("tr",[t("td",[v._v("GB18030")]),v._v(" "),t("td",[v._v("GB家族的新版字符集。")])]),v._v(" "),t("tr",[t("td",[v._v("unicode")]),v._v(" "),t("td",[v._v("包含ASCII字符集，重新定义了全球通用的字符集。")])])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("编码模型")]),v._v(" "),t("th",[v._v("说明")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("ASCII")]),v._v(" "),t("td",[v._v("ASCII字符编码，以0-127编号，使用编号直接进行二进制编码")])]),v._v(" "),t("tr",[t("td",[v._v("GB2312")]),v._v(" "),t("td",[v._v("最早的简体中文编码，使用分区编码")])]),v._v(" "),t("tr",[t("td",[v._v("BIG5")]),v._v(" "),t("td",[v._v("繁体中文编码，主要用于台湾地区")])]),v._v(" "),t("tr",[t("td",[v._v("GBK")]),v._v(" "),t("td",[v._v("略")])]),v._v(" "),t("tr",[t("td",[v._v("GB18030")]),v._v(" "),t("td",[v._v("GB家族的新版编码，向下兼容")])]),v._v(" "),t("tr",[t("td",[v._v("UTF-8、UTF-16、UTF-32")]),v._v(" "),t("td",[v._v("国际化编码标准，"),t("code",[v._v("码元")]),v._v("大小分别为1个字节、2个字节、4个字节。")])])])]),v._v(" "),t("p",[t("code",[v._v("unicode字符集")]),v._v("编码的时候目前"),t("code",[v._v("码元")]),v._v("大小有1个字节、2个字节、4个字节这么三种情况，分别对应的编码方式是"),t("code",[v._v("UTF-8")]),v._v("、"),t("code",[v._v("UTF-16")]),v._v("、"),t("code",[v._v("UTF-32")]),v._v("这三种")]),v._v(" "),t("h5",{attrs:{id:"utf-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utf-8"}},[v._v("#")]),v._v(" UTF-8")]),v._v(" "),t("p",[v._v("这种编码方案的"),t("code",[v._v("码元")]),v._v("采用一个字节。但是一个字节最多只能表示256个字符。所以"),t("code",[v._v("UTF-8编码")]),v._v("是可以使用了多个字节组成一个字符，用首字节的开头几位来辨别是一个字符用几个字节编码的：")]),v._v(" "),t("ul",[t("li",[v._v("如果首字节以0开头，肯定是单字节编码(单个码元)；")]),v._v(" "),t("li",[v._v("如果首字节以110开头，肯定是双字节编码(2个码元)；")]),v._v(" "),t("li",[v._v("如果首字节以1110开头，肯定是三字节编码(3个码元)。")])]),v._v(" "),t("h5",{attrs:{id:"utf-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utf-16"}},[v._v("#")]),v._v(" UTF-16")]),v._v(" "),t("p",[v._v("这种编码方案的"),t("code",[v._v("码元")]),v._v("采用2个字节，但是2个字节最多只能表示65536个字符，"),t("code",[v._v("UTF-16")]),v._v("提出了一个"),t("code",[v._v("代理区")]),v._v("的概念。")]),v._v(" "),t("h5",{attrs:{id:"utf-32"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utf-32"}},[v._v("#")]),v._v(" UTF-32")]),v._v(" "),t("p",[v._v("这种编码方案的"),t("code",[v._v("码元")]),v._v("采用4个字节，4个字节就可以表示"),t("code",[v._v("4294967296")]),v._v("个数，所以使用一个码元(4字节)就基本可以表示unicode字符集所有的编号了。")]),v._v(" "),t("p",[t("strong",[v._v("Tip")])]),v._v(" "),t("p",[v._v("u字符的在三种编号被编号为：")]),v._v(" "),t("p",[v._v("UTF-8")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("01110101\n")])])]),t("p",[v._v("UTF-16")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("00000000 01110101\n")])])]),t("p",[v._v("UTF-32")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("00000000 00000000 00000000 01110101\n")])])]),t("p",[v._v("所以UTF-16、UTF-32在编码0~127编号的字符的时候会比UTF-8浪费。")]),v._v(" "),t("h3",{attrs:{id:"bom-byte-order-mark-字节顺序标记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bom-byte-order-mark-字节顺序标记"}},[v._v("#")]),v._v(" BOM（Byte Order Mark）字节顺序标记")]),v._v(" "),t("p",[v._v("当使用windows记事本保存文件的时候，编码方式可以选择ANSI（通过locale判断，简体中文系统下是GB家族）、UTF-16LE、Utf-8等。")]),v._v(" "),t("p",[v._v("windows（例如：简体中文系统）在文件头部增加了几个字节以表示编码方式，三个字节（0xef, 0xbb, 0xbf）表示UTF-8；两个字节（0xff, 0xfe或者0xfe, 0xff）表示UTF-16（Unicode）；无表示GB**。")]),v._v(" "),t("p",[v._v("excel沿用了windows判断编码的逻辑（上文提到），当发现无BOM时，采用GB18030编码进行解码而导致内容乱码。")])])}),[],!1,null,null,null);_.default=e.exports}}]);