(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{478:function(e,n,t){"use strict";t.r(n);var s=t(62),a=Object(s.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("实现一个观察者类Observer，具有on、emit、remove方法。WeakMap用于生成键值对的集合，与Map不同的是，WeakMap只接受对象作为键名。")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("const events = (() => {\n    let _message = new WeakMap()\n    class event {\n        constructor () {\n            console.log(_message, '_message')\n            _message.set(this, {})\n        }\n        on (type, fn) {\n            let message = _message.get(this)\n            if (!message[type]) {\n                message[type] = [fn]\n            } else {\n                message[type].push(fn)\n            }\n        }\n\n        emit (type, arg) {\n            let message = _message.get(this)\n            if (!message[type]) return\n            message[type].forEach(item => item.call(this, {arg: arg}))\n        }\n\n        remove (type, fn) {\n            let Message = _message.get(this)[type]\n            if (Message instanceof Array) {\n              for(let i = Message.length - 1; i >= 0; i--) {\n                 Message[i] === fn && Message.splice(i, 1)\n              }\n            }\n        }\n    }\n    return event\n})()\n\nfunction fn(name){\n\tconsole.log(name)\n}\n\nlet event = new events()\nevent.on('test',fn)\nevent.emit('test', 'xuyanjie')\nevent.remove('test', fn)\nevent.emit('test', 'xuyanjie')\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);