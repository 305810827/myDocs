{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{489:function(t,e,s){\"use strict\";s.r(e);var n=s(62),c=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h2\",{attrs:{id:\"什么是csp\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是csp\"}},[t._v(\"#\")]),t._v(\" 什么是CSP\")]),t._v(\" \"),s(\"p\",[t._v(\"​\\t\\tCSP全称Content Security Policy ，翻译为内容安全策略，就是为了页面内容安全而制定的一系列防护策略. 通过CSP所约束的的规责指定可信的内容来源（这里的内容可以指脚本、图片、iframe、fton、style等等可能的远程的资源）。通过CSP协定，让WEB处于一个安全的运行环境中。\")]),t._v(\" \"),s(\"p\",[t._v(\"​\\t\\t前端有”同源策略”，就是一个页面的资源只能从与之同源的服务器获取，而不允许跨域获取。主要用来防止XSS攻击，可以避免页面被注入恶意代码，影响安全。但是这个策略是个双刃剑，挡住恶意代码的同时也限制了前端的灵活性，CSP就出现了，通过 Content-Security-Policy 网页的开发者可以控制整个页面中外部资源的加载和执行。可以让我们可以跨域获取资源，又能防止恶意代码。\")]),t._v(\" \"),s(\"p\",[t._v(\"如何使用呢？\")]),t._v(\" \"),s(\"p\",[t._v(\"我们只需要在meta属性中设置下即可：如下代码：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('<meta http-equiv=\"Content-Security-Policy\" content=\"\">\\n')])])]),s(\"p\",[t._v(\"比如如下的列子：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"<meta http-equiv=\\\"Content-Security-Policy\\\" content=\\\"\\ndefault-src http: https:  *.xxx.com 'self' 'unsafe-inline' ;\\nstyle-src 'self' 'unsafe-inline' *.yyy.com;\\nscript-src 'self' 'unsafe-inline' 'unsafe-eval' ;\\n\\\">\\n\")])])]),s(\"p\",[t._v(\"默认设置（default-src）：信任 http ,https协议资源，信任当前域名资源，信任符合*.xxx.com的域名资源CSS设置（style-src）：信任当前域名资源，允许内嵌的CSS资源，信任来自*.yyy.com下的CSS资源。\\nJS设置（script-src）：信任当前域名资源，允许内嵌的JS执行，允许将字符串当作代码执行\")]),t._v(\" \"),s(\"p\",[t._v(\"有如下类别\")]),t._v(\" \"),s(\"p\",[t._v(\"default-src 给下面所有的规则设定一个默认值\\nscript-src 外部脚本\\nstyle-src 样式表\\nimg-src 图像\\nmedia-src 媒体文件（音频和视频）\\nfont-src 字体文件\\nobject-src 插件（比如 Flash）\\nchild-src 框架\\nframe-ancestors 嵌入的外部资源（比如、\"),s(\"iframe\",[t._v(\"、和）\\nconnect-src HTTP 连接（通过 XHR、WebSockets、EventSource等）\\nworker-src worker脚本\\nmanifest-src manifest 文件\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"script-src有如下属性值：\")])]),t._v(\" \"),s(\"p\",[t._v(\"unsafe-inline 允许执行页面内嵌的\"),s(\"script\")])])}),[],!1,null,null,null);e.default=c.exports}}]);","extractedComments":[]}