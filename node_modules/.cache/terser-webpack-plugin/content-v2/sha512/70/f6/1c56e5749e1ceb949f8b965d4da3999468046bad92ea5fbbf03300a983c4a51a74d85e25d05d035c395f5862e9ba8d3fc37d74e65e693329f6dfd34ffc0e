{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{497:function(t,v,_){\"use strict\";_.r(v);var p=_(62),s=Object(p.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"h3\",{attrs:{id:\"https\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#https\"}},[t._v(\"#\")]),t._v(\" https\")]),t._v(\" \"),_(\"p\",[t._v(\"HTTP协议是以明文的方式传输数据，不提供任何方式的数据加密，因此加入了SSL协议，SSL的主要作用第一是给数据加密，保证数据的传输安全，第二是校验网站的SSL证书，验证其真实性。http加上ssl合称https。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"https请求过程\")])]),t._v(\" \"),_(\"p\",[t._v(\"1、首先客户端向服务端发起tcp连接请求\")]),t._v(\" \"),_(\"p\",[t._v(\"2、服务端收到客户端请求连接报文，服务器把CA私钥签名的数字证书（包含服务端公钥、颁发机构、有效期）发给客户端校验\")]),t._v(\" \"),_(\"p\",[t._v(\"3、客户端收到数字证书，把浏览器中内置的CA公钥校验证书合法性，并解析出服务端公钥，客户端随机生产了对称加密的密钥，用服务器公钥加密后发送服务端\")]),t._v(\" \"),_(\"p\",[t._v(\"4、服务端接收后成功建立tcp连接，此后使用对称加密密钥加密数据进行传输。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"CA证书\")])]),t._v(\" \"),_(\"p\",[t._v(\"CA证书就是CA机构（权威信誉机构）给服务器签发的证书。\")]),t._v(\" \"),_(\"p\",[t._v(\"CA机构自己会生成非对称加密的一对私钥公钥，浏览器会内置此类公钥，而私钥用来对服务器提供的公钥进行签名生成CA证书（包含机构的相关信息）。然后在服务器配置好CA证书，每次请求就会把CA证书返回给客户端。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"没有CA证书会怎样\")])]),t._v(\" \"),_(\"p\",[t._v(\"如果没有CA证书，https请求过程就是\")]),t._v(\" \"),_(\"p\",[t._v(\"1、首先客户端向服务端发起tcp连接请求\")]),t._v(\" \"),_(\"p\",[t._v(\"2、服务端返回公钥给客户端\")]),t._v(\" \"),_(\"p\",[t._v(\"3、客户端用公钥加密对称加密密钥，把密钥发送给服务端\")]),t._v(\" \"),_(\"p\",[t._v(\"4、服务端解析出密钥\")]),t._v(\" \"),_(\"p\",[t._v(\"此时若有第三方自己生成了一对公钥私钥，在第二步把服务器给客户端的公钥拦截替换成第三方的公钥，此时在第三步客户端就会使用第三方的公钥加密对称加密密钥，在返回密钥给服务器时，第三方又拦截了，用自己的私钥就可以解析出数据，再用之前拦截的服务器公钥进行加密还给服务器。这样就不声不息窃取了请求数据。\")])])}),[],!1,null,null,null);v.default=s.exports}}]);","extractedComments":[]}